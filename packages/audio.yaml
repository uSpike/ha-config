# Nice to have:
#  universal controls multiple children by default
#  attributes can be templates


# Multiple configured in config flow
spotify:
  client_id: !secret jordan_spotify_client_id
  client_secret: !secret jordan_spotify_client_secret

group:
  audio_clients:
    entities:
      - media_player.kitchen
      - media_player.bedroom
      - media_player.livingroom

media_player:
  - platform: yamaha_musiccast
    host: 10.52.110.12
    port: 5005

  - platform: yamaha_musiccast
    host: 10.52.110.14
    port: 5006

  - platform: snapcast
    host: !secret hass_ip

  - platform: mpd
    host: !secret hass_ip
    port: 6600

  - platform: universal
    name: "Kitchen"
    children:
      - media_player.snapcast_client_kitchen
    # State follows is_volume_muted
    state_template: >
      {% if state_attr('media_player.snapcast_client_kitchen', 'is_volume_muted') %}
      off
      {% else %}
      on
      {% endif %}
    commands:
      turn_on:
        service: media_player.volume_mute
        data: {entity_id: media_player.snapcast_client_kitchen, is_volume_muted: False}
      turn_off:
        service: media_player.volume_mute
        data: {entity_id: media_player.snapcast_client_kitchen, is_volume_muted: True}
      # Scale volume with minimum of 0% and max of 40%
      volume_set:
        service: media_player.volume_set
        data_template:
          entity_id: media_player.snapcast_client_kitchen
          volume_level: '{{ 0 + ((0.40 - 0) * volume_level) }}'
    attributes:
      volume_level: sensor.kitchen_volume_level
      is_volume_muted: media_player.snapcast_client_kitchen|is_volume_muted
      source: media_player.snapcast_client_kitchen|source
      source_list: media_player.snapcast_client_kitchen|source_list

  - platform: universal
    name: "Bedroom"
    children:
      - media_player.snapcast_client_bedroom
    # State follows is_volume_muted
    state_template: >
      {% if state_attr('media_player.snapcast_client_bedroom', 'is_volume_muted') %}
      off
      {% else %}
      on
      {% endif %}
    commands:
      turn_on:
        service: media_player.volume_mute
        data: {entity_id: media_player.snapcast_client_bedroom, is_volume_muted: False}
      turn_off:
        service: media_player.volume_mute
        data: {entity_id: media_player.snapcast_client_bedroom, is_volume_muted: True}
      # Scale volume with minimum of 0% and max of 40%
      volume_set:
        service: media_player.volume_set
        data_template:
          entity_id: media_player.snapcast_client_bedroom
          volume_level: '{{ 0 + ((0.40 - 0) * volume_level) }}'
    attributes:
      volume_level: sensor.bedroom_volume_level
      is_volume_muted: media_player.snapcast_client_bedroom|is_volume_muted
      source: media_player.snapcast_client_bedroom|source
      source_list: media_player.snapcast_client_bedroom|source_list

  - platform: universal
    name: "Livingroom"
    children:
      - media_player.livingroom_receiver
      - media_player.snapcast_client_livingroom
    state_template: >
      {% if state_attr('media_player.snapcast_client_livingroom', 'is_volume_muted') %}
      off
      {% else %}
      on
      {% endif %}
    commands:
      turn_on:
        service: script.turn_on
        entity_id: script.turn_on_livingroom_audio
      turn_off:
        service: script.turn_on
        entity_id: script.turn_off_livingroom_audio
      # Scale volume with minimum of 30% and max of 75%
      volume_set:
        service: media_player.volume_set
        data_template:
          entity_id: media_player.livingroom_receiver
          volume_level: '{{ 0.3 + ((0.75 - 0.30) * volume_level) }}'
    attributes:
      volume_level: sensor.livingroom_volume_level
      is_volume_muted: media_player.livingroom_receiver|is_volume_muted
      source: media_player.snapcast_client_livingroom|source
      source_list: media_player.snapcast_client_livingroom|source_list

  - platform: universal
    name: Home
    children:
      - group.audio_clients
    commands:
      turn_on:
        service: media_player.turn_on
        entity_id:
          - group.audio_clients
      turn_off:
        service: media_player.turn_off
        entity_id:
          - group.audio_clients
      volume_set:
        service: media_player.volume_set
        data_template:
          entity_id:
            - group.audio_clients
          volume_level: '{{ volume_level }}'
      volume_mute:
        service: media_player.volume_mute
        data_template:
          entity_id:
            - group.audio_clients
          is_volume_muted: '{{ is_volume_muted }}'
      volume_up:
        service: media_player.volume_up
        entity_id:
          - group.audio_clients
      volume_down:
        service: media_player.volume_down
        entity_id:
          - group.audio_clients
      select_source:
        service: media_player.select_source
        data_template:
          entity_id:
            - media_player.snapcast_group_home
            #- group.audio_clients
          source: '{{ source }}'
    attributes:
      is_volume_muted: media_player.snapcast_group_home|is_volume_muted
      source: media_player.snapcast_group_home|source
      source_list: media_player.snapcast_group_home|source_list

sensor:
  - platform: template
    sensors:
      home_audio_source:
        value_template: '{{ state_attr("media_player.home", "source") }}'
      spotify_jordan_source:
        value_template: '{{ state_attr("media_player.spotify_jordan", "source") }}'
      spotify_kristen_source:
        value_template: '{{ state_attr("media_player.spotify_kristen", "source") }}'
      # Volume levels scaled back to 0.0 to 1.0
      kitchen_volume_level:
        value_template: '{{ float(state_attr("media_player.snapcast_client_kitchen", "volume_level"), default=0.0) / (0.40 - 0.0) }}'
      bedroom_volume_level:
        value_template: '{{ float(state_attr("media_player.snapcast_client_bedroom", "volume_level"), default=0.0) / (0.40 - 0.0) }}'
      livingroom_volume_level:
        value_template: >-
          {% set vol = float(state_attr("media_player.livingroom_receiver", "volume_level"), default=0.0) %}
          {% if vol >= 0.0 %}
          {{ (vol - 0.3) / (0.75 - 0.3) }}
          {% else %}
          0.0
          {% endif %}

script:
  turn_on_livingroom_audio:
    sequence:
      - service: media_player.volume_mute
        data: {entity_id: media_player.snapcast_client_livingroom, is_volume_muted: False}
      - service: media_player.turn_on
        entity_id: media_player.livingroom_receiver
      - wait_template: '{{ is_state("media_player.livingroom_receiver", "on") }}'
        timeout: "00:00:07"
      - service: media_player.select_source
        data: {entity_id: media_player.livingroom_receiver, source: "coaxial"}
  turn_off_livingroom_audio:
    sequence:
      - service: media_player.volume_mute
        data: {entity_id: media_player.snapcast_client_livingroom, is_volume_muted: True}
      - service: media_player.turn_off
        entity_id: media_player.livingroom_receiver
  audio_source_radio_wpr:
    sequence:
      - service: media_player.play_media
        entity_id: media_player.mpd
        data:
          media_content_id: "https://wpr-ice.streamguys1.com/wpr-ideas-mp3-64"
          media_content_type: "channel"

automation:
  - alias: "Remote Jordan Spotify"
    trigger:
      - platform: event
        event_type: zwave_js_value_notification
        event_data: {node_id: 24, label: "Scene 002"}
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: '{{ trigger.event.data["value"] == "KeyPressed" }}'
            sequence:
              - service: media_player.turn_on
                entity_id: media_player.home
              - service: media_player.select_source
                data: {entity_id: media_player.home, source: "Jordan_Spotify"}
              - service: media_player.media_play
                entity_id: media_player.spotify_jordan
          - conditions:
              - condition: template
                value_template: '{{ trigger.event.data["value"] == "KeyHeldDown" }}'
            sequence:
              - service: media_player.media_next_track
                entity_id: media_player.spotify_jordan

  - alias: "Remote Kristen Spotify"
    trigger:
      - platform: event
        event_type: zwave_js_value_notification
        event_data: {node_id: 24, label: "Scene 001"}
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: '{{ trigger.event.data["value"] == "KeyPressed" }}'
            sequence:
              - service: media_player.turn_on
                entity_id: media_player.home
              - service: media_player.select_source
                data: {entity_id: media_player.home, source: "Kristen_Spotify"}
              - service: media_player.media_play
                entity_id: media_player.spotify_kristen
          - conditions:
              - condition: template
                value_template: '{{ trigger.event.data["value"] == "KeyHeldDown" }}'
            sequence:
              - service: media_player.media_next_track
                entity_id: media_player.spotify_kristen

  - alias: "Remote WPR"
    trigger:
      - platform: event
        event_type: zwave_js_value_notification
        event_data: {node_id: 24, label: "Scene 004"}
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: '{{ trigger.event.data["value"] == "KeyPressed" }}'
            sequence:
              - service: media_player.turn_on
                entity_id: media_player.home
              - service: media_player.select_source
                data: {entity_id: media_player.home, source: "MPD"}
              - service: script.turn_on
                entity_id: script.audio_source_radio_wpr

  - alias: "Stop Audio From Remote"
    trigger:
      - platform: event
        event_type: zwave_js_value_notification
        event_data: {node_id: 24, label: "Scene 003", value: "KeyPressed"}
    action:
      - service: media_player.turn_off
        entity_id: media_player.home

  - alias: "Audio Source Change"
    trigger:
      - platform: state
        entity_id: sensor.home_audio_source
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: '{{ trigger.to_state.state == "Jordan_Spotify" }}'
            sequence:
              - service: media_player.select_source
                data: {entity_id: media_player.spotify_jordan, source: "Snapcast"}
          - conditions:
              - condition: template
                value_template: '{{ trigger.to_state.state == "Kristen_Spotify" }}'
            sequence:
              - service: media_player.select_source
                data: {entity_id: media_player.spotify_kristen, source: "Snapcast"}
      - choose:
          - conditions:
              - condition: template
                value_template: '{{ trigger.from_state.state == "Jordan_Spotify" }}'
            sequence:
              - service: media_player.media_pause
                entity_id: media_player.spotify_jordan
          - conditions:
              - condition: template
                value_template: '{{ trigger.from_state.state == "Kristen_Spotify" }}'
            sequence:
              - service: media_player.media_pause
                entity_id: media_player.spotify_kristen
          - conditions:
              - condition: template
                value_template: '{{ trigger.from_state.state == "MPD" }}'
            sequence:
              - service: media_player.media_stop
                entity_id: media_player.mpd
